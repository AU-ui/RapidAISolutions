rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Clients can only read and update their own profile
    match /clients/{clientId} {
      allow read, write: if request.auth != null && request.auth.uid == clientId;
    }
    
    // Leads - clients can only access their own leads
    match /leads/{leadId} {
      allow read, write: if request.auth != null && 
        resource.data.client_id == request.auth.uid;
      allow create: if request.auth != null && 
        request.resource.data.client_id == request.auth.uid;
    }
    
    // Appointments - clients can only access their own appointments
    match /appointments/{appointmentId} {
      allow read, write: if request.auth != null && 
        resource.data.client_id == request.auth.uid;
      allow create: if request.auth != null && 
        request.resource.data.client_id == request.auth.uid;
    }
    
    // Proposals - clients can only access their own proposals
    match /proposals/{proposalId} {
      allow read, write: if request.auth != null && 
        resource.data.client_id == request.auth.uid;
      allow create: if request.auth != null && 
        request.resource.data.client_id == request.auth.uid;
    }
    
    // Support tickets - clients can only access their own tickets
    match /support_tickets/{ticketId} {
      allow read, write: if request.auth != null && 
        resource.data.client_id == request.auth.uid;
      allow create: if request.auth != null && 
        request.resource.data.client_id == request.auth.uid;
    }
    
    // Admin access (for future admin panel)
    // You can add admin rules here when you create admin functionality
    // match /{document=**} {
    //   allow read, write: if request.auth != null && 
    //     exists(/databases/$(database)/documents/admins/$(request.auth.uid));
    // }
  }
} 